/*
 * This file was generated by the Gradle 'init' task.
 */

//plugins {
//    id 'java-library'
//    id 'maven-publish'
//}
plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

repositories {
    mavenCentral()
//    mavenLocal()
//    maven {
//        url = uri('https://repo.maven.apache.org/maven2/')
//    }
}



dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.0'
    implementation 'io.openvidu:openvidu-java-client:2.28.0'
    runtimeOnly 'mysql:mysql-connector-java:8.0.28'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.0'


    //Logger 설정
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'


    // JSON.simple 라이브러리 추가
    implementation 'com.googlecode.json-simple:json-simple:1.1.1' // 최신 버전 사용 가능

    // SLF4J (Java Logging Interface)
    implementation 'org.slf4j:slf4j-api:1.7.32'

    implementation 'javax.persistence:javax.persistence-api:2.2'
  //  implementation 'org.hibernate:hibernate-core:5.5.6.Final'

    // Logback (Logging Implementation)
    // implementation 'ch.qos.logback:logback-classic:1.2.6'

    implementation 'net.bramp.ffmpeg:ffmpeg:0.7.0'


//    // scheduled
//    implementation 'org.springframework.boot:spring-boot-starter-task'
}


group = 'io.openvidu'
version = '2.28.0'
description = 'openvidu-meeting-service'
// java.sourceCompatibility = JavaVersion.VERSION_1_8
//java.sourceCompatibility = "1.8"
java {
    sourceCompatibility = '1.8'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
//publishing {
//    publications {
//        maven(MavenPublication) {
//            from(components.java)
//        }
//    }
//}

//tasks.withType(JavaCompile) {
//    options.encoding = 'UTF-8'
//}
//
//tasks.withType(Javadoc) {
//    options.encoding = 'UTF-8'
//}
